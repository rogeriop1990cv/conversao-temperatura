!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/2b0aa59/
0	package.json	/^    "stress",$/;"	s	array:keywords
1	package.json	/^    "load",$/;"	s	array:keywords
2	package.json	/^    "cpu",$/;"	s	array:keywords
3	package.json	/^    "node",$/;"	s	array:keywords
4	package.json	/^    "hog",$/;"	s	array:keywords
5	package.json	/^    "test"$/;"	s	array:keywords
CLI	README.md	/^#### CLI$/;"	t
Installation	README.md	/^## Installation$/;"	s
Local use	README.md	/^#### Local use$/;"	t
NodeHog	bin.js	/^const NodeHog = require('.\/lib\/nodehog.js');$/;"	C
NodeHog	lib/nodehog.js	/^class NodeHog {$/;"	c
NodeHog <img align="left" height="100" src="https://raw.githubusercontent.com/jaredgorski/nodehog/master/.media/nodehog.png">	README.md	/^# NodeHog <img align="left" height="100" src="https:\/\/raw.githubusercontent.com\/jaredgorski\//;"	c
Parameters	README.md	/^### Parameters$/;"	S
Programmatically	README.md	/^#### Programmatically$/;"	t
Project use	README.md	/^#### Project use$/;"	t
Usage	README.md	/^## Usage$/;"	s
author	package.json	/^  "author": "Jared Gorski",$/;"	s
bin	package.json	/^  "bin": {$/;"	o
bugs	package.json	/^  "bugs": {$/;"	o
constructor	lib/nodehog.js	/^  constructor(type = 'cpu', lifespan = 300000, deathspan = 300000, iterations = 3) {$/;"	m	class:NodeHog
description	package.json	/^  "description": "A simple cpu hog utility.",$/;"	s
directories	package.json	/^  "directories": {$/;"	o
homepage	package.json	/^  "homepage": "https:\/\/github.com\/jaredgorski\/nodehog#readme"$/;"	s
keywords	package.json	/^  "keywords": [$/;"	a
lib	package.json	/^    "lib": "lib"$/;"	s	object:directories
license	package.json	/^  "license": "MIT",$/;"	s
lockfileVersion	package-lock.json	/^  "lockfileVersion": 1$/;"	n
main	package.json	/^  "main": "index.js",$/;"	s
name	package-lock.json	/^  "name": "nodehog",$/;"	s
name	package.json	/^  "name": "nodehog",$/;"	s
nodehog	package.json	/^    "nodehog": ".\/bin.js"$/;"	s	object:bin
periodLogger	lib/nodehog.js	/^  periodLogger() {$/;"	m	class:NodeHog
relieve	lib/nodehog.js	/^  relieve() {$/;"	m	class:NodeHog
repository	package.json	/^  "repository": {$/;"	o
scripts	package.json	/^  "scripts": {$/;"	o
start	lib/nodehog.js	/^  async start() {$/;"	m	class:NodeHog
start	package.json	/^    "start": "node index.js"$/;"	s	object:scripts
stress	lib/nodehog.js	/^  stress() {$/;"	m	class:NodeHog
stressCpu	lib/nodehog.js	/^  stressCpu() {$/;"	m	class:NodeHog
stressMemory	lib/nodehog.js	/^  stressMemory() {$/;"	m	class:NodeHog
type	package.json	/^    "type": "git",$/;"	s	object:repository
url	package.json	/^    "url": "git+https:\/\/github.com\/jaredgorski\/nodehog.git"$/;"	s	object:repository
url	package.json	/^    "url": "https:\/\/github.com\/jaredgorski\/nodehog\/issues"$/;"	s	object:bugs
version	package-lock.json	/^  "version": "0.1.0",$/;"	s
version	package.json	/^  "version": "0.1.1",$/;"	s
